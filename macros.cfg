## Macros
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}      #edit to your park position
    {% set y = params.Y|default(330) %}      #edit to your park position
    {% set z = params.Z|default(20)|float %} #edit to your park position
    {% set e = params.E|default(2) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
	
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(2) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
	
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
	M106 S0 #Turn-off fan
	M104 S0 #Turn-off hotend
	PAUSE
    CANCEL_PRINT_BASE
	
[gcode_macro G29]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}    
		G28
	{% endif %}
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE SAVE=p1
	G90
	G1 X5 Y5 Z5 F4000
	
[gcode_macro G34]
description: Dual Z Alignment
gcode:
	#{action_respond_info(printer.z_tilt.applied)}
	{% if printer.z_tilt.applied|lower == 'false' %}
		{% if "xyz" in printer.toolhead.homed_axes %}    
			Z_TILT_ADJUST
		{% else %}
			{action_respond_info("Printer not homed")}
			G28
			Z_TILT_ADJUST
		{% endif %}
	{% else %}
		{action_respond_info("Z motors already aligned")}
    {% endif %}

[gcode_macro END_PRINT]
gcode:
	G91 #Relative positioning
	G1 E-2 F2700 #Retract a bit
	G1 E-2 Z0.2 F2400 #Retract and raise Z
	G1 X5 Y5 F3000 #Wipe out
	G1 Z10 #Raise Z more
	G90 #Absolute positionning

	G1 X0 Y340 #Present print
	M106 S0 #Turn-off fan
	M104 S0 #Turn-off hotend
	M140 S0 #Turn-off bed

	#M84 X Y E #Disable all steppers but Z
 
[gcode_macro START_PRINT]
gcode:
	M80 #Turn On
	M117 preheating
	# Start bed heating
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	M140 S{BED_TEMP}
	~# Start pre-heating the nozzle
	M104 S170
	M117 homing and aligning
	{% if not "xyz" in printer.toolhead.homed_axes %}    
      G28 #Home all axes
    {% endif %}
	
	G34 #Dual Z Alignment
	G92 E0 #Reset Extruder
	
	# Use absolute coordinates
	#G90
	# Reset the G-Code Z offset (adjust Z offset if needed)
	#SET_GCODE_OFFSET Z=0.0
	# Home the printer
	# Z_TILT_ADJUST #Z Steppers Auto-Alignment
	
	#BED_MESH_CALIBRATE
	#BED_MESH_PROFILE SAVE=p1
	G29
	@BEDLEVELVISUALIZER
    BED_MESH_OUTPUT
	#G1 X0 Y0 Z5 F4000
	# Move the nozzle near the bed
	G1 Z5 F3000
	# Move the nozzle very close to the bed
	#G1 Z0.15 F300
	M117 heating
	# Wait for bed to reach temperature
	M190 S{BED_TEMP}
	# Set and wait for nozzle to reach temperature
	M109 S{EXTRUDER_TEMP}
	M117 purging
	#Purge line
	#G1 Z2.0 F3000 ;Move Z Axis up
	#G1 X5 Y20 Z0.28 F5000.0 ;Move to start position
	#G1 X5 Y300.0 Z0.28 F1500.0 E15 ;Draw the first line
	#G1 X6 Y300.0 Z0.28 F5000.0 ;Move to side a little
	#G1 X6 Y20 Z0.28 F1500.0 E30 ;Draw the second line
	#G92 E0 ;Reset Extruder
	#G1 Z2.0 F3000 ;Move Z Axis up
	purge_line

[gcode_macro M80]
description: Turn ON the printer
gcode:
	{action_call_remote_method("set_device_power", device="BLV", state="on")}

[gcode_macro M81]
description: Turn OFF the printer
gcode:
	{action_call_remote_method("set_device_power", device="BLV", state="off")}

#https://github.com/vladbabii/klipper.macro.random_macros

[gcode_macro PRINT_STR]
gcode:
  {% set MSG = "%s" % params.MSG|string %}
  M117 {MSG}
  { action_respond_info(MSG) }
  
[gcode_macro test_moves]
gcode:
  {% set iters = params.I|default(10)|int %}
  {% set tool  = printer.toolhead %}
  {% set axisMin = tool.axis_minimum %}
  {% set axisMax = tool.axis_maximum %}

	{% if not "xyz" in printer.toolhead.homed_axes %}    
		{action_respond_info("Printer not homed")}
		G28
	{% endif %}

  {% for i in range(1,iters) %}
    {% set a = range(0, tool.max_accel|int)|random |int %}
    {% set f = range(0, tool.max_velocity|int)|random * 60 |int %}
    {% set x = range(axisMin.x|int, axisMax.x|int)|random %}
    {% set y = range(axisMin.y|int, axisMax.y|int)|random %}
    #{% set z = range(axisMin.z|int, axisMax.z|int)|random %}
	{% set z = 50%}

    PRINT_STR MSG='{"i: %03d Acc: %i F%i X%f Y%f Z%f" % (i, a, f, x, y, z) }'
    M204 S{a}
    G0 X{x} Y{y} Z{z} F{f}
  {% endfor %}
	
[gcode_macro purge_line]
#default_parameter_LOCATION:    1
gcode:
	{% set location = params.LOCATION|default(1)|int %}
	#random location
	{% set rndL = range(0, 5)|random %}
	{% set tool = printer.toolhead %}
	
	{% if rndL == 1 %}
        {% set location = 'left' %}
    {% elif rndL == 2 %}
        {% set location = 'right' %}
    {% elif rndL == 3 %}
        {% set location = 'front' %}
	{% elif rndL == 4 %}
		{% set location = 'back' %}
	{% else %}
		{% set location = 'front' %}
    {% endif %}
	
	#get bed size
    {% set axisMin = tool.axis_minimum %}
	{% set axisMax = tool.axis_maximum %}
                          
	#{% set a = range(0, tool.max_accel|int)|random |int %}
	{% set f = 5000 %}
	
	{% set margin = range(1, 15)|random %}
	
	{% if not "xyz" in printer.toolhead.homed_axes %}    
		{action_respond_info("Printer not homed")}
		G28
	{% endif %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}

		#M204 S{a}
		
		{action_respond_info(location)}
		
		G1 Z2.0 F3000 ;Move Z Axis up
		
		{% if location == 'left' %}
			G1 X{margin} Y{axisMin.y + 20} Z0.28 F{f} ;Move to start position
			G1 X{margin} Y{axisMax.y - 5} Z0.28 F{f} E15 ;Draw the first line
			G1 X{margin+5} Y{axisMax.y - 5} Z0.28 F{f} ;Move to side a little
			G1 X{margin+5} Y{axisMin.y + 20} Z0.28 F1500.0 E30 ;Draw the second line
		{% elif location == 'right' %}
			G1 X{axisMax.x - margin} Y{axisMin.y + 20} Z0.28 F{f} ;Move to start position
			G1 X{axisMax.x - margin} Y{axisMax.y - 5} Z0.28 F{f} E15 ;Draw the first line
			G1 X{axisMax.x - margin - 5} Y{axisMax.y - 5} Z0.28 F{f} ;Move to side a little
			G1 X{axisMax.x - margin - 5} Y{axisMin.y + 20} Z0.28 F1500.0 E30 ;Draw the second line
		{% elif location == 'front' %}
			G1 X{axisMin.x + 20} Y{margin} Z0.28 F{f} ;Move to start position
			G1 X{axisMax.x - 5} Y{margin} Z0.28 F{f} E15 ;Draw the first line
			G1 X{axisMax.x - 5} Y{margin+5} Z0.28 F{f} ;Move to side a little
			G1 X{axisMin.x + 20} Y{margin+5} Z0.28 F1500.0 E30 ;Draw the second line
		{% elif location == 'back' %}
			G1 X{axisMin.x + 20} Y{axisMax.y - margin} Z0.28 F{f} ;Move to start position
			G1 X{axisMax.x - 5} Y{axisMax.y - margin} Z0.28 F{f} E15 ;Draw the first line
			G1 X{axisMax.x - 5} Y{axisMax.y - margin -5 } Z0.28 F{f} ;Move to side a little
			G1 X{axisMin.x + 20} Y{axisMax.y - margin -5 } Z0.28 F1500.0 E30 ;Draw the second line
		{% endif %}
		
		G92 E0 ;Reset Extruder
		G1 Z2.0 F3000 ;Move Z Axis up
	
	{% else %}
		action_respond_info("Extruder not hot enough")}
	{% endif %}
	
[gcode_macro DUMP_VARS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% endfor %}
   {% endfor %}

[gcode_macro DUMP_CONFIG_VARS]
gcode:
   {% for name1 in printer['configfile'].config %}
      #{% for name2 in printer[name1] %}
         { action_respond_info("printer['configfile'].%s" % (name1)) }
      #{% endfor %}
   {% endfor %}
[gcode_macro DUMP_PARAMETERS]
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['bed_mesh','configfile'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
      {% else %}
        {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}

[gcode_macro M48]
gcode:
	G28
	PROBE_ACCURACY REPEAT=10 SPEED=3 X=125 Y=160 Z=5